{"version":3,"sources":["components/ToDoLists.js","components/Input.js","App.js","index.js"],"names":["ToDoLists","props","className","toDoList","map","thing","index","completed","onClick","e","target","tagName","newToDoList","setToDoList","toggleEffect","title","id","filter","toDo","Input","useState","input","setInput","onSubmit","preventDefault","currentTodos","type","placeholder","onChange","value","App","useEffect","fetch","then","response","json","data","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAEe,SAASA,EAAUC,GAoB9B,OACI,qBAAKC,UAAU,YAAf,SAEID,EAAME,SAASC,KAAI,SAACC,EAAOC,GACvB,OAAO,oBAAIJ,UAAU,aAAd,SACH,qBAAIA,UAAWG,EAAME,UAAU,4CAA8C,kBAC7EC,QAAS,SAAAC,GAAC,OAlBL,SAACA,EAAGH,GAIrB,GAAwB,WAArBG,EAAEC,OAAOC,QAAsB,CAC9B,IAAMC,EAAW,YAAOX,EAAME,UAC9BS,EAAYN,GAAOC,WAAaK,EAAYN,GAAOC,UACnDN,EAAMY,YAAYD,IAWIE,CAAaL,EAAGH,IAD9B,oBAC8CA,EAD9C,KACuDD,EAAMU,MAAOV,EAAME,UAC1E,wBAAQS,GAAIX,EAAMU,MAAOP,QAAS,kBAzB9BO,EAyB+CV,EAAMU,WAxBrEd,EAAMY,YAAYZ,EAAME,SAASc,QAAO,SAAAC,GAAI,OAAIA,EAAKH,QAAUA,MADhD,IAACA,GAyB6Db,UAAU,6BAA3E,yBC1BL,SAASiB,EAAT,GAAiC,IAAhBN,EAAe,EAAfA,YAE5B,EAAyBO,mBAAS,IAAlC,mBAAMC,EAAN,KAAaC,EAAb,KASA,OACI,sBAAMC,SARV,SAAsBd,GAClBA,EAAEe,iBAEFX,GAAY,SAAAY,GAAY,OAAK,CAACV,MAAOM,EAAOd,WAAU,IAA9B,mBAAyCkB,OAEjEH,EAAS,KAGuBpB,UAAU,YAA1C,SACI,uBAAOwB,KAAK,OACZC,YAAY,oBACZzB,UAAU,eACV0B,SAAU,SAAAnB,GAAC,OAAIa,EAASb,EAAEC,OAAOmB,QAEjCA,MAAOR,MCeJS,MA/Bf,WAEE,IAGA,EAAgCV,mBADX,IACrB,mBAAOjB,EAAP,KAAiBU,EAAjB,KAcA,OAVAkB,qBAAU,WACTC,MARW,6EASTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIvB,EAAYuB,EAAKC,OAAO,EAAG,UACxC,IAOD,sBAAKnC,UAAU,MAAf,UACA,oBAAIA,UAAU,YAAd,wBACA,cAACiB,EAAD,CAAON,YAAeA,IACtB,cAACb,EAAD,CAAWG,SAAYA,EAAUU,YAAeA,Q,MCtBpDyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.672a747a.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function ToDoLists(props) {\n\n    const deleteToDo = (title) => {\n        props.setToDoList(props.toDoList.filter(toDo => toDo.title !== title));\n        \n        \n    }\n\n    const toggleEffect = (e, index) => {\n\n        //If para poder eliminar el bot√≥n ya que si no prima el \n        //click del li\n        if(e.target.tagName !== \"BUTTON\") {\n            const newToDoList = [...props.toDoList];\n            newToDoList[index].completed = !newToDoList[index].completed;\n            props.setToDoList(newToDoList);\n        }\n    }\n   \n \n    return (\n        <div className=\"text-left\">\n            {\n            props.toDoList.map((thing, index) => {\n                return <ul className=\"list-group\">\n                    <li className={thing.completed?\"list-group-item list-group-item-secondary\" : \"list-group-item\"} \n                    onClick={e => toggleEffect(e, index)}>To Do: {index}: {thing.title}{thing.completed}\n                    <button id={thing.title} onClick={() => deleteToDo(thing.title)} className=\"btn btn-danger float-right\">X</button></li>\n                </ul>\n            })\n            \n            }  \n            \n        </div>\n    )\n}\n\n","\nimport {useState} from 'react';\n\nexport default function Input({ setToDoList }) {\n\n    const[input, setInput] = useState(\"\");\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        setToDoList(currentTodos => [{title: input, completed:false}, ...currentTodos]);\n\n        setInput(\"\");\n    }\n    return (\n        <form onSubmit = {handleSubmit} className=\"my-4 mx-4\">\n            <input type=\"text\"\n            placeholder=\"Insert a new task\"\n            className=\"form-control\"\n            onChange={e => setInput(e.target.value)}\n            //Siempre en los formularios\n            value={input} /> \n\n        </form>\n    )\n}\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport ToDoLists from './components/ToDoLists';\nimport Input from './components/Input';\n\nfunction App() {\n\n  const URL = \"https://raw.githubusercontent.com/BC-FSWD/todo-list/master/todo-list.json\";\n\n  const initialState = [];\n  const [toDoList, setToDoList] = useState(initialState);\n\n  //El fetch lo metemos en el useEffect para que solo nostraiga datos\n  //la primera vez\n  useEffect(() => {\n   fetch(URL)\n    .then(response => response.json())\n    .then(data => setToDoList(data.splice(0, 20)));\n  }, []);\n  \n\n\n\n\n  return (\n    <div className=\"App\">\n    <h3 className=\"mt-4 mb-4\">To-Do List</h3>\n    <Input setToDoList = {setToDoList}/>\n    <ToDoLists toDoList = {toDoList} setToDoList = {setToDoList}/>\n\n    \n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}